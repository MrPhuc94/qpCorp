// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  user_id           Int       @id @default(autoincrement())
  username          String?    @unique
  password_hash     String?
  email             String    @unique
  first_name        String?
  last_name         String?
  date_of_birth     DateTime?
  registration_date String?
  Orders            Order[]
  Address           Address[]
  Review            Review[]
  Cart              Cart[]
}

model Product {
  product_id     Int         @id @default(autoincrement())
  name           String
  description    String?
  price          Decimal?
  stock_quantity Int
  category_id    Int
  created_at     String
  updated_at     String
  OrderItems     OrderItem[]
  Review         Review[]
  CartItem       CartItem[]
}

model Category {
  category_id Int    @id @default(autoincrement())
  name        String
  description String
}

model Order {
  order_id     Int         @id @default(autoincrement())
  user         User        @relation(fields: [user_id], references: [user_id])
  user_id      Int
  order_date   String?
  total_amount Decimal
  status       String
  order_item   OrderItem[]
  Payment      Payment[]
}

model OrderItem {
  order_item_id Int     @id @default(autoincrement())
  order         Order   @relation(fields: [order_id], references: [order_id])
  order_id      Int
  product       Product @relation(fields: [product_id], references: [product_id])
  product_id    Int
  quantity      Int
  price         Decimal
}

model Address {
  address_id     Int    @id @default(autoincrement())
  user           User   @relation(fields: [user_id], references: [user_id])
  user_id        Int
  street_address String
  city           String
  state          String
  postal_code    String
  country        String
}

model Payment {
  payment_id     Int     @id @default(autoincrement())
  order          Order   @relation(fields: [order_id], references: [order_id])
  order_id       Int
  payment_date   String?
  amount         Decimal
  payment_method String
}

model Review {
  review_id  Int     @id @default(autoincrement())
  product    Product @relation(fields: [product_id], references: [product_id])
  product_id Int
  user       User    @relation(fields: [user_id], references: [user_id])
  user_id    Int
  rating     Int
  comment    String?
  created_at String?
}

model Cart {
  cart_id    Int        @id @default(autoincrement())
  user       User       @relation(fields: [user_id], references: [user_id])
  user_id    Int
  created_at String?
  CartItem   CartItem[]
}

model CartItem {
  cart_item_id Int     @id @default(autoincrement())
  cart         Cart    @relation(fields: [cart_id], references: [cart_id])
  cart_id      Int
  product      Product @relation(fields: [product_id], references: [product_id])
  product_id   Int
  quantity     Int
}
